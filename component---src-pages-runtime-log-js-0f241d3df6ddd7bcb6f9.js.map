{"version":3,"sources":["webpack:///./src/pages/runtimeLog.js"],"names":["IndexPage","data","useState","display","setDisplay","useEffect","urlParam","URLSearchParams","window","location","search","get","runtimeLogsHeading","filter","allMarkdownRemark","edges","edge","node","frontmatter","tags","indexOf","uniqueTags","Set","forEach","item","i","item1","add","keys","title","href","map","tag","to","className","slug","modified_date","pageQuery"],"mappings":"iOAkEeA,UA5DG,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAAU,EACEC,mBAAS,OAAhCC,EADqB,KACZC,EADY,KAG5BC,qBAAU,WACR,IAAMC,EAAW,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,OAE/DP,EADCE,GAGa,UAElB,IAAIM,EAAqB,cACT,QAAZT,IACFS,EAAqBA,EAAqB,cAAgBT,GAE5D,IAAMU,EAASZ,EAAKa,kBAAkBC,MAAMF,QAAO,SAAAG,GACjD,MAAe,QAAZb,IACmD,IAAjDa,EAAKC,KAAKC,YAAYC,KAAKC,QAAQjB,GAE/B,OAFP,KAMAkB,EAAa,IAAIC,IASrB,OAPArB,EAAKa,kBAAkBC,MAAMQ,SAAQ,SAACC,EAAMC,GAC1CD,EAAKP,KAAKC,YAAYC,KAAKI,SAAQ,SAACG,GAChCL,EAAWM,IAAID,SAGrBL,EAAU,YAAOA,EAAWO,QAG1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,oCAFF,8IAG6I,uBAAGC,KAAK,yDAAR,UAC3I,oCACGT,EAAWU,KAAI,SAACC,GAAD,OACd,kBAAC,OAAD,CAAMC,GAAI,mBAAqBD,GAC7B,0BAAME,UAAU,oBAAoBF,OAG1C,4BAAKpB,GACL,4BACGC,EAAOkB,KAAI,SAAAf,GAAI,OACd,wBAAIkB,UAAU,OACZ,kBAAC,OAAD,CAAMD,GAAI,eAAiBjB,EAAKC,KAAKC,YAAYiB,MAAjD,IACInB,EAAKC,KAAKC,YAAYkB,cAD1B,MAC4CpB,EAAKC,KAAKC,YAAYW,OAFpE,OAIGb,EAAKC,KAAKC,YAAYC,KAAKY,KAAI,SAAAC,GAAG,OACjC,kBAAC,OAAD,CAAMC,GAAI,mBAAqBD,GAC7B,0BAAME,UAAU,oBAAoBF,cAU7C,IAAMK,EAAS","file":"component---src-pages-runtime-log-js-0f241d3df6ddd7bcb6f9.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport '../styles/style.sass'\n\nconst IndexPage = ({data}) => {\n  const [display, setDisplay] = useState('all');\n\n  useEffect(() => {\n    const urlParam = new URLSearchParams(window.location.search).get('tag');\n    if(urlParam){\n      setDisplay(urlParam);\n    }\n    else setDisplay('all');\n  })\n  let runtimeLogsHeading = \"runtimeLogs\";\n  if (display !== \"all\"){\n    runtimeLogsHeading = runtimeLogsHeading + \" with tag: \" + display;\n  }\n  const filter = data.allMarkdownRemark.edges.filter(edge => {\n    if(display !== 'all'){\n      if(edge.node.frontmatter.tags.indexOf(display) !== -1) return 1\n    }else {\n      return 1\n    }\n  })\n\n  let uniqueTags = new Set();\n\n  data.allMarkdownRemark.edges.forEach((item, i) => {\n    item.node.frontmatter.tags.forEach((item1) => {\n        uniqueTags.add(item1);\n    })\n  });\n  uniqueTags = [...uniqueTags.keys()]\n\n  return(\n    <Layout>\n      <SEO title=\"Home\" />\n      <h4>Note</h4>\n      If you feel any of the information here is either wrong||outdated||can be improved, please inform me by sending a PR or raising a issue at <a href=\"https://github.com/sandeshghanta/gatsby-theme-console\">Github</a>\n      <h4>Tags</h4>\n        {uniqueTags.map((tag) => (\n          <Link to={`/runtimeLog?tag=` + tag}>\n            <span className=\"badge badge-dark\">{tag}</span>\n          </Link>\n        ))}\n      <h4>{runtimeLogsHeading}</h4>\n      <ul>\n        {filter.map(edge => (\n          <li className=\"p-1\">\n            <Link to={`/runtimeLog/` + edge.node.frontmatter.slug}>\n              [{edge.node.frontmatter.modified_date}]: {edge.node.frontmatter.title}\n            </Link>&nbsp;&nbsp;&nbsp;&nbsp;\n            {edge.node.frontmatter.tags.map(tag => (\n              <Link to={`/runtimeLog?tag=` + tag}>\n                <span className=\"badge badge-dark\">{tag}</span>\n              </Link>\n            ))}\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\nexport default IndexPage;\nexport const pageQuery = graphql`\n    {\n        allMarkdownRemark(sort: { fields: [frontmatter___modified_date], order: DESC }\n            filter: { frontmatter: { draft: { ne: true } } }){\n            edges{\n                node{\n                    frontmatter{\n                        title\n                        created_date\n                        modified_date\n                        slug\n                        tags\n                    }\n                    html\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}